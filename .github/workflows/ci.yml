name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install and upgrade build tools
      run: python -m pip install --upgrade pip setuptools wheel

    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libnotify-bin

    - name: Install Python dependencies
      run: |
        # Use a temporary requirements file that excludes windows-only packages on Linux
        if [ "$RUNNER_OS" == "Linux" ]; then
          grep -v -i "pywin32" requirements-dev.txt > temp-requirements.txt
          pip install -r temp-requirements.txt
        else
          pip install -r requirements-dev.txt
        fi
      shell: bash

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 . --count --exit-zero --max-complexity=10 --statistics

    - name: Test with pytest
      run: pytest
